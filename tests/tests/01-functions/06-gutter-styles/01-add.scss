//@import "memo";
@import "breakpoint";
@import "singularitygs";

/**
  * Add gutter-style Function
  * - Parses gutter-style definition and appends it to a list of gutter-styles and returns the resulting list.
**/
// .add-gutter-style {
//   /* Add gutter-style, no existing gutter-style */
//   $gutter-styles: add-gutter-style(opposite) !global;
//   _test: "add-gutter-style(opposite)";
//   _result: inspect($gutter-styles);
//   /* Add gutter-style, existing gutter-style */
//   $gutter-styles: add-gutter-style(split at 500px) !global;
//   _test: "add-gutter-style(split at 500px)";
//   _result: inspect($gutter-styles);
//   _length: length($gutter-styles);
//   _added-item: nth($gutter-styles, 2);
//   _length-added: length(nth($gutter-styles, 2));
//   _added-item-gutter-style: nth(nth($gutter-styles, 2), 1);
//   _added-item-query: nth(nth($gutter-styles, 2), 2);
//   /* Add gutter-style, existing gutter-style */
//   $gutter-styles: add-gutter-style(opposite fixed at 500px) !global;
//   _test: "add-gutter-style(opposite fixed at 500px)";
//   _result: inspect($gutter-styles);
//   _length: length($gutter-styles);
//   _added-item: nth($gutter-styles, 3);
//   _length-added: length(nth($gutter-styles, 3));
//   _added-item-gutter-style: nth(nth($gutter-styles, 3), 1);
//   _added-item-query: nth(nth($gutter-styles, 3), 2);
//   /* Add gutter-style to empty alternative variable */
//   $gutter-styles2: ();
//   $gutter-styles2: add-gutter-style(split, $gutter-styles2);
//   _test: "add-gutter-style(split, $gutter-styles2)";
//   _result: inspect($gutter-styles2);
//   _control: inspect($gutter-styles);
// }