// Grid location is automatically counted unless overridden
$grid-counter: 1

=grid-span($span, $location: $grid-counter, $columns: $columns, $gutter: $gutter, $padding: $padding)
  float: left
  width: grid-span($span, $location, $columns, $gutter)
  
  // add special left padding
  @if type-of($columns) == list
    @if type-of(nth($columns, $location)) == list
      padding-left: nth(nth($columns, $location), 2)
      +box-sizing(border-box)
    @else if $padding != 0
      padding-left: $padding
      +box-sizing(border-box)
    // add special right padding
    @if type-of(nth($columns, ($location + $span - 1))) == list
      padding-right: nth(nth($columns, ($location + $span - 1)), 2)
      +box-sizing(border-box)
    @else if $padding != 0
      padding-right: $padding
      +box-sizing(border-box)
  
  @else
    +grid-padding($padding)
  
  // bump up the counter
  $grid-counter: $location + $span
  @if $grid-counter > column-count($columns)
    $grid-counter: 1
  @else
    margin-right: $gutter
  @if $padding != 0
    +grid-padding($padding)


// This writes classes, IDs, or silent objects for you to extend or use in your HTML. They can be written to different breakpoints to extend or call into your HTML as needed.
=grid-objects($prefix: a, $columns: $columns, $gutter: $gutter, $padding: $padding, $selector: "%")
  // counter keeps track of the starting position
  $count: 0
  // Loop through each column in the series
  @for $i from 0 through column-count($columns)
    @for $n from ($count + 1) through column-count($columns)
      #{$selector}#{$prefix}#{$count}-#{$n}
        //@debug $n
        //@debug $n - $count
        @debug grid-span($n - $count, $n, $columns, $gutter)
        +grid-span($n - $count, $n, $columns, $gutter)
    // Add to the column count each pass
    $count: $count + 1

// Add padding to an object on the grid.
=grid-padding($padding)
  @if $padding != 0
    padding: 0 $padding
    // box sizing to make sure padding doesn't effect grid.
    +box-sizing(border-box)
